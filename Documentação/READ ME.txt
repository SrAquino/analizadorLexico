Neste trabalho, a implementação deverá ser diretamente feita com o autômato. 
A definição do autômato deverá ser feita de modo a reconhecer e transformar em token os elementos de um subconjunto restrito da linguagem de programação Scheme, que é um dialeto da linguagem LISP.
O autômato construído deve ler caracter a caracter do arquivo passado como parâmetro do programa e construir uma lista de tokens, onde cada token será identificado como um elemento específico do programa.

Os únicos delimitadores em Scheme são os parênteses '(' e ')'

PALAVRAS RESERVADAS: Serão usadas neste trabalho:
defun, define, let, lambda, car, cdr, list, atom, cond, case, if, T, nil.

OPERADORES: (aritméticos e lógicos):
+, *, -, /, <, leq, >, geq, neq, eq, =.

IDENTIFICADORES: devem começar com uma letra, os restantes símbolos
podem ser letras, dígitos ou _.

Os tokens lidos devem ser agrupados usando alguma estrutura de dados pertinente.

A segunda parte do trabalho consiste nos seguinte passos:

1. Construir a gramática da linguagem Scheme, restrita aos operadores,
funções e símbolos descritos acima.

2. A partir da gramática, gerar o autômato de pilha que vai reconhecer a linguagem.

3. Implementar e executar o autômato de pilha em programas exemplo.

4. Construir a árvore sintática do programa, apresentado em formato legível.

O trabalho deve ser entregue em um arquivo contendo os seguintes elementos:

1. Um relatório contendo a explicação sobre o trabalho feito,
as estruturas de dados utilizadas, os procedimentos de teste realizados e o
referencial bibliográfico consultado.

2. O código-fonte completo do programa.

3. Os casos de teste executados.

4. O cronograma do projeto, com todas as atividades e os responsáveis
por sua execução.

- Inicio dos trabalhos(04/09, 05/09) - estudo do projeto I;
- Implementação do trabalho(11/09, 12/09) - Implementação do autômato finito determinístico de reconhecimento dos tokens da gramática;
- Implementação do trabalho(18/09, 19/09) - Inicio da implementação do código do programa;
- Implementação do trabalho(25/09, 26/09) - Finalização da implementação do projeto, testes e correção de bugs;
- Implementação do trabalho(02/10, 03/10) - estudo do projeto II
- Implementação do trabalho(04/10) - Inicio da implementação do código do programa;
- Implementação do trabalho(05/10, 06/10) - Implementação do código do programa;
- Implementação do trabalho(07/10) - Finalização da implementação do programa, testes e correção de bugs;
- Término dos trabalhos: 08/10

------------------------------------------------------------------------------
A solução implementada é Top Down

[!] COMANDOS:
Utilize 
- javac *.java -d Compiled { para compilar o programa }
- java Main { Dentro da pasta /Compiled = para rodar o programa } 